#!/bin/bash

# echos script location
function getLocation {
	local SOURCE
	local DIR
	SOURCE="${BASH_SOURCE[0]}"
	while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
	  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
	  SOURCE="$(readlink "$SOURCE")"
	  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
	done
	DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
	echo $DIR
}

# parsing the bots.list file
function parseAllBots {
	local line
	local files
	local names
	local pids
	local oifs
	local data
	files=()
	names=()
	pids=()
	oifs=$IFS
	IFS=':'
	while read line
	do
		data=($line)
		if [[ ${#data[@]} -eq 3 ]]
		then
			files+=(${data[0]})
			names+=(${data[1]})
			pids+=(${data[2]})
		fi
	done <$DIR/bots.list
	IFS=$oifs
	BOTFILES=(${files[@]})
	BOTNAMES=(${names[@]})
	BOTPIDS=(${pids[@]})
}

# parses the bots.list for specific bots, param 1 = string to look
function parseBot {
	local rows
	local oifs
	local data
	rows=(`cat $DIR/bots.list | grep -iP "(/$1\\.php\\:|\\:$1\\:)"`)
	if [[ ${#rows[@]} -eq 1 ]]
	then
		oifs=$IFS
		IFS=':'
		data=(${rows[0]})
		BOTFILES+=(${data[0]})
		BOTNAMES+=(${data[1]})
		BOTPIDS+=(${data[2]})
		IFS=$oifs
	else
		BOTNOTFOUND+=($1)
	fi
}

#parse bots from bots.list
function parseBots {
	local bot
	if [[ $PALL -eq 1 ]]
	then
		parseAllBots
	else
		for bot in ${PBOT[@]}
		do
			parseBot $bot
		done
	fi
}

# check if param is parameter or shall be handled as bot
function isParam {
	if [[ `expr index "$1" -` = "1" ]]
	then
		return 1
	else
		return 0
	fi
}

# parses the params
function parseParams {
	local params
	local bots
	local p
	local c
	if [[ $# -eq 0 ]]
	then
		PACTION="status"
		PLONG=0
		PALL=1
	else
		c=0
		for p in "$@"
		do
			c=`expr $c + 1`
			isParam "$p"
			if [[ $? -eq 1 ]]
			then
				case $p in
				"--list"|"-ls")
					PACTION="list"
					POACTION=$p
				;;
				"--status"|"-s")
					PACTION="status"
					POACTION=$p
				;;
				"--start"|"-o")
					PACTION="start"
					POACTION=$p
				;;
				"--stop"|"-c")
					PACTION="stop"
					POACTION=$p
				;;
				"--restart"|"-r")
					PACTION="restart"
					POACTION=$p
				;;
				"--update"|"-u")
					PUDATE="update"
					POACTION=$p
				;;
				"--long"|"-l")
					PLONG=1
				;;
				"--all"|"-a")
					PALL=1
				;;
				"-la"|"-al")
					PALL=1
					PLONG=1
				;;
				*)
					PACTION=$p
					PVALID=0
					break;
				;;
				esac
			else
				bots=(${@:$c})
				break
			fi
		done
		if [[ -z $PACTION ]]
		then
			PACTION="status"
		fi
		if [[ ${#bots[@]} -eq 0 ]]
		then
			PALL=1
		else
			PBOT=(${bots[@]})
		fi
	fi
}

# global vars, dont mess with them!

#script location
DIR=`getLocation`
#config files of the bots
BOTFILES=()
#character names of the bots
BOTNAMES=()
#pids of the bots inner process, 0 if not running
BOTPIDS=()
#bots that werent found
BOTNOTFOUND=()

PVALID=1
POACTION=""
PACTION=""
PLONG=0
PALL=0
PBOT=()
parseParams $@

if [[ $PVALID -eq 1 ]]
then
	parseBots
	case $PACTION in
	"status")
		echo ${BOTNAMES[@]}
	;;
	*)
		echo "parameter '$POACTION' not implemented"
	esac
else
	echo "invalid paramenter '$PACTION'"
fi
